<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.educandoweb.course.CourseApplicationTests" time="5.48" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Everton e Duda\Documents\ws-sts\course\target\test-classes;C:\Users\Everton e Duda\Documents\ws-sts\course\target\classes;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.2\spring-boot-starter-web-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.2\spring-boot-starter-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot\3.3.2\spring-boot-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.2\spring-boot-autoconfigure-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.2\spring-boot-starter-logging-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\Everton e Duda\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\Everton e Duda\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Everton e Duda\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.2\spring-boot-starter-json-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.2\jackson-databind-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.2\jackson-annotations-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.2\jackson-core-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.2\jackson-datatype-jdk8-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.2\jackson-datatype-jsr310-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.2\jackson-module-parameter-names-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.2\spring-boot-starter-tomcat-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.26\tomcat-embed-core-10.1.26.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.26\tomcat-embed-el-10.1.26.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.26\tomcat-embed-websocket-10.1.26.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-web\6.1.11\spring-web-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-beans\6.1.11\spring-beans-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\io\micrometer\micrometer-observation\1.13.2\micrometer-observation-1.13.2.jar;C:\Users\Everton e Duda\.m2\repository\io\micrometer\micrometer-commons\1.13.2\micrometer-commons-1.13.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-webmvc\6.1.11\spring-webmvc-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-aop\6.1.11\spring-aop-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-context\6.1.11\spring-context-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-expression\6.1.11\spring-expression-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.2\spring-boot-starter-test-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-test\3.3.2\spring-boot-test-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.2\spring-boot-test-autoconfigure-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Everton e Duda\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Everton e Duda\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\Everton e Duda\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\Everton e Duda\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\Everton e Duda\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\Everton e Duda\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\Everton e Duda\.m2\repository\org\awaitility\awaitility\4.2.1\awaitility-4.2.1.jar;C:\Users\Everton e Duda\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.3\junit-jupiter-5.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.3\junit-jupiter-api-5.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\platform\junit-platform-commons\1.10.3\junit-platform-commons-1.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.3\junit-jupiter-params-5.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.3\junit-jupiter-engine-5.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\platform\junit-platform-engine\1.10.3\junit-platform-engine-1.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\Everton e Duda\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.18\byte-buddy-agent-1.14.18.jar;C:\Users\Everton e Duda\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Everton e Duda\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\Everton e Duda\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\Everton e Duda\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-core\6.1.11\spring-core-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-jcl\6.1.11\spring-jcl-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-test\6.1.11\spring-test-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.2\spring-boot-starter-data-jpa-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.2\spring-boot-starter-aop-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.2\spring-boot-starter-jdbc-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-jdbc\6.1.11\spring-jdbc-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Everton e Duda\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Everton e Duda\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Everton e Duda\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Everton e Duda\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Everton e Duda\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Everton e Duda\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Everton e Duda\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Everton e Duda\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Everton e Duda\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\data\spring-data-jpa\3.3.2\spring-data-jpa-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\data\spring-data-commons\3.3.2\spring-data-commons-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-orm\6.1.11\spring-orm-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-tx\6.1.11\spring-tx-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-aspects\6.1.11\spring-aspects-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\sts\sts-4.24.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\Everton e Duda\AppData\Local\Temp\surefire11009925819076630294\surefirebooter-20240731183726471_3.jar C:\Users\Everton e Duda\AppData\Local\Temp\surefire11009925819076630294 2024-07-31T18-37-25_672-jvmRun1 surefire-20240731183726471_1tmp surefire_0-20240731183726471_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Everton e Duda\Documents\ws-sts\course\target\test-classes;C:\Users\Everton e Duda\Documents\ws-sts\course\target\classes;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.2\spring-boot-starter-web-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.2\spring-boot-starter-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot\3.3.2\spring-boot-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.2\spring-boot-autoconfigure-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.2\spring-boot-starter-logging-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\Everton e Duda\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\Everton e Duda\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Everton e Duda\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.2\spring-boot-starter-json-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.2\jackson-databind-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.2\jackson-annotations-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.2\jackson-core-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.2\jackson-datatype-jdk8-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.2\jackson-datatype-jsr310-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.2\jackson-module-parameter-names-2.17.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.2\spring-boot-starter-tomcat-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.26\tomcat-embed-core-10.1.26.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.26\tomcat-embed-el-10.1.26.jar;C:\Users\Everton e Duda\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.26\tomcat-embed-websocket-10.1.26.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-web\6.1.11\spring-web-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-beans\6.1.11\spring-beans-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\io\micrometer\micrometer-observation\1.13.2\micrometer-observation-1.13.2.jar;C:\Users\Everton e Duda\.m2\repository\io\micrometer\micrometer-commons\1.13.2\micrometer-commons-1.13.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-webmvc\6.1.11\spring-webmvc-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-aop\6.1.11\spring-aop-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-context\6.1.11\spring-context-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-expression\6.1.11\spring-expression-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.2\spring-boot-starter-test-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-test\3.3.2\spring-boot-test-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.2\spring-boot-test-autoconfigure-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\Everton e Duda\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Everton e Duda\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\Everton e Duda\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\Everton e Duda\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\Everton e Duda\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\Everton e Duda\.m2\repository\net\bytebuddy\byte-buddy\1.14.18\byte-buddy-1.14.18.jar;C:\Users\Everton e Duda\.m2\repository\org\awaitility\awaitility\4.2.1\awaitility-4.2.1.jar;C:\Users\Everton e Duda\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.3\junit-jupiter-5.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.3\junit-jupiter-api-5.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\platform\junit-platform-commons\1.10.3\junit-platform-commons-1.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.3\junit-jupiter-params-5.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.3\junit-jupiter-engine-5.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\junit\platform\junit-platform-engine\1.10.3\junit-platform-engine-1.10.3.jar;C:\Users\Everton e Duda\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\Everton e Duda\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.18\byte-buddy-agent-1.14.18.jar;C:\Users\Everton e Duda\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Everton e Duda\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\Everton e Duda\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\Everton e Duda\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-core\6.1.11\spring-core-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-jcl\6.1.11\spring-jcl-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-test\6.1.11\spring-test-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.2\spring-boot-starter-data-jpa-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.2\spring-boot-starter-aop-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.2\spring-boot-starter-jdbc-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-jdbc\6.1.11\spring-jdbc-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Everton e Duda\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Everton e Duda\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Everton e Duda\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Everton e Duda\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Everton e Duda\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Everton e Duda\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Everton e Duda\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Everton e Duda\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Everton e Duda\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Everton e Duda\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Everton e Duda\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\data\spring-data-jpa\3.3.2\spring-data-jpa-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\data\spring-data-commons\3.3.2\spring-data-commons-3.3.2.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-orm\6.1.11\spring-orm-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-tx\6.1.11\spring-tx-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\org\springframework\spring-aspects\6.1.11\spring-aspects-6.1.11.jar;C:\Users\Everton e Duda\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Everton e Duda"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-04-16"/>
    <property name="java.home" value="C:\sts\sts-4.24.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Everton e Duda\Documents\ws-sts\course"/>
    <property name="style.color" value="always"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\Everton e Duda\AppData\Local\Temp\surefire11009925819076630294\surefirebooter-20240731183726471_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.3+9-LTS"/>
    <property name="user.name" value="Everton e Duda"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-21.0.3+9"/>
    <property name="localRepository" value="C:\Users\Everton e Duda\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\EVERTO~1\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="21.0.3"/>
    <property name="user.dir" value="C:\Users\Everton e Duda\Documents\ws-sts\course"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="13432"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\sts\sts-4.24.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/sts/sts-4.24.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530/jre/bin/server;C:/sts/sts-4.24.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.3.v20240426-1530/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files\Eclipse Adoptium\jdk-21.0.2.13-hotspot\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Git\cmd;C:\Users\Everton e Duda\Documents\apache-maven-3.9.6\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Everton e Duda\AppData\Local\Microsoft\WindowsApps;C:\Users\Everton e Duda\AppData\Local\Programs\Microsoft VS Code\bin;C:\sts\sts-4.24.0.RELEASE;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="21.0.3+9-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[course] "/>
  </properties>
  <testcase name="contextLoads" classname="com.educandoweb.course.CourseApplicationTests" time="0.547">
    <system-out><![CDATA[18:37:27.489 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.educandoweb.course.CourseApplicationTests]: CourseApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
18:37:27.596 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.educandoweb.course.CourseApplication for test class com.educandoweb.course.CourseApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.2)

2024-07-31T18:37:28.000-03:00  INFO 13432 --- [course] [           main] c.e.course.CourseApplicationTests        : Starting CourseApplicationTests using Java 21.0.3 with PID 13432 (started by Everton e Duda in C:\Users\Everton e Duda\Documents\ws-sts\course)
2024-07-31T18:37:28.001-03:00  INFO 13432 --- [course] [           main] c.e.course.CourseApplicationTests        : The following 1 profile is active: "test"
2024-07-31T18:37:28.749-03:00  INFO 13432 --- [course] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-31T18:37:28.826-03:00  INFO 13432 --- [course] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 68 ms. Found 5 JPA repository interfaces.
2024-07-31T18:37:29.242-03:00  INFO 13432 --- [course] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-31T18:37:29.431-03:00  INFO 13432 --- [course] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-07-31T18:37:29.432-03:00  INFO 13432 --- [course] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-31T18:37:29.479-03:00  INFO 13432 --- [course] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-31T18:37:29.544-03:00  INFO 13432 --- [course] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-31T18:37:29.584-03:00  INFO 13432 --- [course] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-07-31T18:37:29.964-03:00  INFO 13432 --- [course] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-31T18:37:30.019-03:00  WARN 13432 --- [course] [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-31T18:37:31.038-03:00  INFO 13432 --- [course] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists tb_category cascade 
Hibernate: 
    drop table if exists tb_order cascade 
Hibernate: 
    drop table if exists tb_order_item cascade 
Hibernate: 
    drop table if exists tb_payment cascade 
Hibernate: 
    drop table if exists tb_product cascade 
Hibernate: 
    drop table if exists tb_product_category cascade 
Hibernate: 
    drop table if exists tb_user cascade 
Hibernate: 
    create table tb_category (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table tb_order (
        order_status integer,
        client_id bigint,
        id bigint generated by default as identity,
        moment timestamp(6) with time zone,
        primary key (id)
    )
Hibernate: 
    create table tb_order_item (
        price float(53),
        quantity integer,
        order_id bigint not null,
        product_id bigint not null,
        primary key (order_id, product_id)
    )
Hibernate: 
    create table tb_payment (
        date timestamp(6) with time zone,
        order_id bigint not null,
        primary key (order_id)
    )
Hibernate: 
    create table tb_product (
        price float(53),
        id bigint generated by default as identity,
        description varchar(255),
        img_url varchar(255),
        name varchar(255),
        primary key (id)
    )
Hibernate: 
    create table tb_product_category (
        category_id bigint not null,
        product_id bigint not null,
        primary key (category_id, product_id)
    )
Hibernate: 
    create table tb_user (
        id bigint generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        phone varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists tb_order 
       add constraint FKi0x0rv7d65vsceuy33km9567n 
       foreign key (client_id) 
       references tb_user
Hibernate: 
    alter table if exists tb_order_item 
       add constraint FK4h5xid5qehset7qwe5l9c997x 
       foreign key (product_id) 
       references tb_product
Hibernate: 
    alter table if exists tb_order_item 
       add constraint FKgeobgl2xu916he8vhljktwxnx 
       foreign key (order_id) 
       references tb_order
Hibernate: 
    alter table if exists tb_payment 
       add constraint FKokaf4il2cwit4h780c25dv04r 
       foreign key (order_id) 
       references tb_order
Hibernate: 
    alter table if exists tb_product_category 
       add constraint FK5r4sbavb4nkd9xpl0f095qs2a 
       foreign key (category_id) 
       references tb_category
Hibernate: 
    alter table if exists tb_product_category 
       add constraint FKgbof0jclmaf8wn2alsoexxq3u 
       foreign key (product_id) 
       references tb_product
2024-07-31T18:37:31.093-03:00  INFO 13432 --- [course] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-31T18:37:31.947-03:00  INFO 13432 --- [course] [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-07-31T18:37:32.011-03:00  INFO 13432 --- [course] [           main] c.e.course.CourseApplicationTests        : Started CourseApplicationTests in 4.26 seconds (process running for 5.443)
Hibernate: 
    insert 
    into
        tb_category
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        tb_category
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        tb_category
        (name, id) 
    values
        (?, default)
Hibernate: 
    insert 
    into
        tb_product
        (description, img_url, name, price, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_product
        (description, img_url, name, price, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_product
        (description, img_url, name, price, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_product
        (description, img_url, name, price, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_product
        (description, img_url, name, price, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_user
        (email, name, password, phone, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_user
        (email, name, password, phone, id) 
    values
        (?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_order
        (client_id, moment, order_status, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_order
        (client_id, moment, order_status, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        tb_order
        (client_id, moment, order_status, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    select
        p1_0.id,
        p1_0.description,
        p1_0.img_url,
        p1_0.name,
        p1_0.price 
    from
        tb_product p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.product_id,
        c1_1.id,
        c1_1.name 
    from
        tb_product_category c1_0 
    join
        tb_category c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.product_id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.name 
    from
        tb_category c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.description,
        p1_0.img_url,
        p1_0.name,
        p1_0.price 
    from
        tb_product p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.product_id,
        c1_1.id,
        c1_1.name 
    from
        tb_product_category c1_0 
    join
        tb_category c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.product_id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.name 
    from
        tb_category c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.name 
    from
        tb_category c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.description,
        p1_0.img_url,
        p1_0.name,
        p1_0.price 
    from
        tb_product p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.product_id,
        c1_1.id,
        c1_1.name 
    from
        tb_product_category c1_0 
    join
        tb_category c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.product_id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.description,
        p1_0.img_url,
        p1_0.name,
        p1_0.price 
    from
        tb_product p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.product_id,
        c1_1.id,
        c1_1.name 
    from
        tb_product_category c1_0 
    join
        tb_category c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.product_id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.description,
        p1_0.img_url,
        p1_0.name,
        p1_0.price 
    from
        tb_product p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.product_id,
        c1_1.id,
        c1_1.name 
    from
        tb_product_category c1_0 
    join
        tb_category c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.product_id=?
Hibernate: 
    insert 
    into
        tb_product_category
        (product_id, category_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tb_product_category
        (product_id, category_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tb_product_category
        (product_id, category_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tb_product_category
        (product_id, category_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tb_product_category
        (product_id, category_id) 
    values
        (?, ?)
Hibernate: 
    insert 
    into
        tb_product_category
        (product_id, category_id) 
    values
        (?, ?)
Hibernate: 
    select
        oi1_0.order_id,
        o1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.name,
        c1_0.password,
        c1_0.phone,
        o1_0.moment,
        o1_0.order_status,
        p1_0.order_id,
        p1_0.date,
        oi1_0.product_id,
        p2_0.id,
        p2_0.description,
        p2_0.img_url,
        p2_0.name,
        p2_0.price,
        oi1_0.price,
        oi1_0.quantity 
    from
        tb_order_item oi1_0 
    left join
        tb_order o1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        tb_user c1_0 
            on c1_0.id=o1_0.client_id 
    left join
        tb_payment p1_0 
            on o1_0.id=p1_0.order_id 
    left join
        tb_product p2_0 
            on p2_0.id=oi1_0.product_id 
    where
        (
            oi1_0.order_id, oi1_0.product_id
        ) in ((?, ?))
Hibernate: 
    select
        oi1_0.order_id,
        o1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.name,
        c1_0.password,
        c1_0.phone,
        o1_0.moment,
        o1_0.order_status,
        p1_0.order_id,
        p1_0.date,
        oi1_0.product_id,
        p2_0.id,
        p2_0.description,
        p2_0.img_url,
        p2_0.name,
        p2_0.price,
        oi1_0.price,
        oi1_0.quantity 
    from
        tb_order_item oi1_0 
    left join
        tb_order o1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        tb_user c1_0 
            on c1_0.id=o1_0.client_id 
    left join
        tb_payment p1_0 
            on o1_0.id=p1_0.order_id 
    left join
        tb_product p2_0 
            on p2_0.id=oi1_0.product_id 
    where
        (
            oi1_0.order_id, oi1_0.product_id
        ) in ((?, ?))
Hibernate: 
    select
        oi1_0.order_id,
        o1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.name,
        c1_0.password,
        c1_0.phone,
        o1_0.moment,
        o1_0.order_status,
        p1_0.order_id,
        p1_0.date,
        oi1_0.product_id,
        p2_0.id,
        p2_0.description,
        p2_0.img_url,
        p2_0.name,
        p2_0.price,
        oi1_0.price,
        oi1_0.quantity 
    from
        tb_order_item oi1_0 
    left join
        tb_order o1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        tb_user c1_0 
            on c1_0.id=o1_0.client_id 
    left join
        tb_payment p1_0 
            on o1_0.id=p1_0.order_id 
    left join
        tb_product p2_0 
            on p2_0.id=oi1_0.product_id 
    where
        (
            oi1_0.order_id, oi1_0.product_id
        ) in ((?, ?))
Hibernate: 
    select
        oi1_0.order_id,
        o1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.name,
        c1_0.password,
        c1_0.phone,
        o1_0.moment,
        o1_0.order_status,
        p1_0.order_id,
        p1_0.date,
        oi1_0.product_id,
        p2_0.id,
        p2_0.description,
        p2_0.img_url,
        p2_0.name,
        p2_0.price,
        oi1_0.price,
        oi1_0.quantity 
    from
        tb_order_item oi1_0 
    left join
        tb_order o1_0 
            on o1_0.id=oi1_0.order_id 
    left join
        tb_user c1_0 
            on c1_0.id=o1_0.client_id 
    left join
        tb_payment p1_0 
            on o1_0.id=p1_0.order_id 
    left join
        tb_product p2_0 
            on p2_0.id=oi1_0.product_id 
    where
        (
            oi1_0.order_id, oi1_0.product_id
        ) in ((?, ?))
Hibernate: 
    insert 
    into
        tb_order_item
        (price, quantity, order_id, product_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        tb_order_item
        (price, quantity, order_id, product_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        tb_order_item
        (price, quantity, order_id, product_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        tb_order_item
        (price, quantity, order_id, product_id) 
    values
        (?, ?, ?, ?)
Hibernate: 
    select
        o1_0.id,
        c1_0.id,
        c1_0.email,
        c1_0.name,
        c1_0.password,
        c1_0.phone,
        o1_0.moment,
        o1_0.order_status,
        p1_0.order_id,
        p1_0.date 
    from
        tb_order o1_0 
    left join
        tb_user c1_0 
            on c1_0.id=o1_0.client_id 
    left join
        tb_payment p1_0 
            on o1_0.id=p1_0.order_id 
    where
        o1_0.id=?
Hibernate: 
    insert 
    into
        tb_payment
        (date, order_id) 
    values
        (?, ?)
]]></system-out>
    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\Everton e Duda\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.18\byte-buddy-agent-1.14.18.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
</testsuite>